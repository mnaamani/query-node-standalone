# QueryNode Infrastructure
# TODO: drop use of env_file and configure only required environment variables
# for each service, this makes it clearer for reference what each service needs as config.
version: '3.4'
services:
  joystream-node:
    image: joystream/node:76f7f9d6fb20e85308d9b055d9698a654759c930
    restart: unless-stopped
    container_name: joystream-node
    volumes:
      - ${CHAIN_BASE_PATH}:/chain
      - ./joy-mainnet.json:/joy-mainnet.json
    command: >
      --pruning=archive
      --ws-external --rpc-cors all
      --log runtime --base-path /chain
      --chain /joy-mainnet.json
    ports:
      - 9944:9944
  db:
    image: postgres:14
    container_name: db
    restart: unless-stopped
    ports:
      - '127.0.0.1:${DB_PORT}:${DB_PORT}'
    volumes:
      - ${DATABASE_VOLUME}:/var/lib/postgresql/data
    env_file:
      # relative to working directory where docker-compose was run from
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${INDEXER_DB_NAME}
      PGPORT: ${DB_PORT}

  db-init:
    image: joystream/query-node:1.2.1
    restart: no
    env_file:
      # relative to working directory where docker-compose was run from
      - .env
    environment:
      - DB_HOST=db
      - DB_NAME=${PROCESSOR_DB_NAME}
      - WARTHOG_DB_HOST=db
      - WARTHOG_DB_DATABASE=${PROCESSOR_DB_NAME}
      - WARTHOG_DB_USERNAME=${DB_USER}
      - WARTHOG_DB_PASSWORD=${DB_PASS}
      - WARTHOG_APP_PORT=4002
    depends_on:
      - db
    working_dir: /joystream
    entrypoint: sh
    command: >
      -c "yarn workspace query-node-root db:prepare && yarn workspace query-node-root db:migrate"

  graphql-server:
    image: joystream/query-node:1.2.1
    container_name: graphql-server
    restart: unless-stopped
    env_file:
      # relative to working directory where docker-compose was run from
      - .env
    environment:
      - DB_HOST=db
      - DB_NAME=${PROCESSOR_DB_NAME}
      - WARTHOG_APP_PORT=${GRAPHQL_SERVER_PORT}
      - GRAPHQL_PLAYGROUND_ENDPOINT=${GRAPHQL_PLAYGROUND_ENDPOINT}
      - GRAPHQL_PLAYGROUND_SUBSCRIPTION_ENDPOINT=${GRAPHQL_PLAYGROUND_SUBSCRIPTION_ENDPOINT}
      - GRAPHQL_PLAYGROUND_CDN_URL=${GRAPHQL_PLAYGROUND_CDN_URL}
    ports:
      - "${GRAPHQL_SERVER_PORT}:${GRAPHQL_SERVER_PORT}"
      - "127.0.0.1:${PROCESSOR_STATE_APP_PORT}:${PROCESSOR_STATE_APP_PORT}"
    depends_on:
      - db
    working_dir: /joystream
    command: ['workspace', 'query-node-root', 'query-node:start:prod']

  processor:
    image: joystream/query-node:1.2.1
    container_name: processor
    restart: unless-stopped
    env_file:
      # relative to working directory where docker-compose was run from
      - .env
    environment:
      - DB_NAME=${PROCESSOR_DB_NAME}
      - INDEXER_ENDPOINT_URL=${PROCESSOR_INDEXER_GATEWAY}
      - TYPEORM_HOST=db
      - TYPEORM_DATABASE=${PROCESSOR_DB_NAME}
      - BATCH_SIZE=100
      - QUEUE_FACTOR=1
      - QUEUE_MAX_CAP_FACTOR=4
      - DEBUG=hydra-processor:event-queue
    depends_on:
      - db
    working_dir: /joystream
    entrypoint: ['yarn']
    command: ['workspace', 'query-node-root', 'processor:start']

  indexer:
    image: joystream/hydra-indexer:v5.0.0-alpha.1
    container_name: indexer
    restart: unless-stopped
    env_file:
      # relative to working directory where docker-compose was run from
      - .env
    environment:
      - DB_NAME=${INDEXER_DB_NAME}
      - INDEXER_WORKERS=5
      - REDIS_URI=redis://redis:6379/0
      - WS_PROVIDER_ENDPOINT_URI=${JOYSTREAM_NODE_WS}
      - DB_HOST=db
      - DEBUG=hydra-indexer:substrate-service
    depends_on:
      - db
      - redis
    command: >
      sh -c "yarn db:bootstrap && yarn start:prod"

  hydra-indexer-gateway:
    image: joystream/hydra-indexer-gateway:5.0.0-alpha.1
    container_name: hydra-indexer-gateway
    restart: unless-stopped
    env_file:
      # relative to working directory where docker-compose was run from
      - .env
    environment:
      - WARTHOG_STARTER_DB_DATABASE=${INDEXER_DB_NAME}
      - WARTHOG_STARTER_DB_HOST=db
      - WARTHOG_STARTER_DB_PASSWORD=${DB_PASS}
      - WARTHOG_STARTER_DB_PORT=${DB_PORT}
      - WARTHOG_STARTER_DB_USERNAME=${DB_USER}
      - WARTHOG_STARTER_REDIS_URI=redis://redis:6379/0
      - WARTHOG_APP_PORT=${HYDRA_INDEXER_GATEWAY_PORT}
      - PORT=${HYDRA_INDEXER_GATEWAY_PORT}
      # - DEBUG=*
    ports:
      - "${HYDRA_INDEXER_GATEWAY_PORT}:${HYDRA_INDEXER_GATEWAY_PORT}"
    depends_on:
      - db
      - redis

  redis:
    image: redis:6.0-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "127.0.0.1:6379:6379"
